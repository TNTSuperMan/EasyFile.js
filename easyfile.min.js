window.EasyFile=new class{#e=!1;#t;#a;#r="efupdownloader";constructor(){document.addEventListener("DOMContentLoaded",(e=>{let t=document.createElement("div");t.style.display="none",t.id=this.#r,this.#t=document.createElement("a"),t.appendChild(this.#t);let a=document.createElement("input");a.type="file",this.#a=a,t.appendChild(this.#a),document.body.appendChild(t),this.#e=!0}))}upload(e){return new Promise(((t,a)=>{if(this.#e||(console.error("DOMの初期化が完了していないため、まだEasyFileを使用できません。"),a()),e.forEach){let t="";e.forEach((e=>{t+=e+", "})),this.#a.accept=t}else this.#a.accept=e+"/*";this.#a.onchange=e=>{e.target.files.length<1&&t(null),t(new EasyFileData(e.target.files[0]))},this.#a.oncancel=e=>{t(null)},this.#a.click()}))}download(e,t,a){this.#t.download=e,this.#t.href=URL.createObjectURL(new Blob([t],{type:a})),this.#t.click(),URL.revokeObjectURL(this.#t.href),this.#t.href=""}};class EasyFileData{rawfd;constructor(e){this.rawfd=e}toBinaryString(){return new Promise(((e,t)=>this.rawfd.arrayBuffer().then((t=>{const a=new Uint8Array(t),r=a.reduce(((e,t)=>e+String.fromCharCode(t)),"");e(r)}))))}toBase64(){return this.toBinaryString().then((e=>btoa(e)))}MimeType(){return this.rawfd.type}toDataURI(){return this.toBase64().then((e=>"data:"+this.MimeType+";base64,"+e))}Fname(){return this.rawfd.name}Size(){return this.rawfd.size}}